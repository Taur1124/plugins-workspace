if("__TAURI__"in window){var __TAURI_WEBSOCKET__=function(){"use strict";var e=Object.defineProperty;function t(e,t=!1){let n=window.crypto.getRandomValues(new Uint32Array(1))[0],r=`_${n}`;return Object.defineProperty(window,r,{value:n=>(t&&Reflect.deleteProperty(window,r),e?.(n)),writable:!1,configurable:!0}),n}async function n(e,n={}){return new Promise(((r,i)=>{let o=t((e=>{r(e),Reflect.deleteProperty(window,`_${a}`)}),!0),a=t((e=>{i(e),Reflect.deleteProperty(window,`_${o}`)}),!0);window.__TAURI_IPC__({cmd:e,callback:o,error:a,...n})}))}function r(e,t="asset"){let n=encodeURIComponent(e);return navigator.userAgent.includes("Windows")?`https://${t}.localhost/${n}`:`${t}://localhost/${n}`}((t,n)=>{for(var r in n)e(t,r,{get:n[r],enumerable:!0})})({},{convertFileSrc:()=>r,invoke:()=>n,transformCallback:()=>t});class i{constructor(e,t){this.id=e,this.listeners=t}static async connect(e,r){const o=[];return await n("plugin:websocket|connect",{url:e,callbackFunction:t((e=>{o.forEach((t=>t(e)))})),config:r}).then((e=>new i(e,o)))}addListener(e){this.listeners.push(e)}async send(e){let t;if("string"==typeof e)t={type:"Text",data:e};else if("object"==typeof e&&"type"in e)t=e;else{if(!Array.isArray(e))throw new Error("invalid `message` type, expected a `{ type: string, data: any }` object, a string or a numeric array");t={type:"Binary",data:e}}return await n("plugin:websocket|send",{id:this.id,message:t})}async disconnect(){return await this.send({type:"Close",data:{code:1e3,reason:"Disconnected by client"}})}}return i}();Object.defineProperty(window.__TAURI__,"websocket",{value:__TAURI_WEBSOCKET__})}
